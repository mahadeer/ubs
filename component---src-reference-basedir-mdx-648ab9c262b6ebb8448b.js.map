{"version":3,"sources":["webpack:///../src/reference/basedir.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","syntax","properties","examples","requires","related","isMDXComponent"],"mappings":"8fAOO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAeC,MAAM,iBAAiBC,YAAY,6WAEkDC,OAAO,+DACnGC,WAAW,KAAKC,SAAS,KAAKC,SAAS,yCAAyCC,QAAQ,uCAAuCP,QAAQ,mB,kMAKnJH,EAAWW,gBAAiB","file":"component---src-reference-basedir-mdx-648ab9c262b6ebb8448b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ubt/ubt/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { ContentLayout } from \"../layout/ContentLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ContentLayout title='Base Directory' description='<b>basedir</b> is an optional attribute for the <b>project</b> node. \nThe property has to be a valid folder path, the UBT will execute the build file provided on top of the folder. So any actions done on the system will be based on the given base directory.\nIf this value is ignore, the current folder from where the UBT is called will be taken as the basedir.' syntax='<project default=\"main\" basedir=\"C:/SomeFolder\">\n</project>' properties='[]' examples='[]' requires='[{\"text\":\"project\",\"route\":\"project\"}]' related='[{\"text\":\"target\",\"route\":\"target\"}]' mdxType=\"ContentLayout\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}