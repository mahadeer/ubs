{"version":3,"sources":["webpack:///../src/reference/target.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","syntax","properties","examples","requires","related","isMDXComponent"],"mappings":"+fAOO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAeC,MAAM,SAASC,YAAY,qYACwLC,OAAO,4DAClOC,WAAW,oZAAoZC,SAAS,sjBAAsiBC,SAAS,yCAAyCC,QAAQ,8EAA8EP,QAAQ,mB,iMAKzmCH,EAAWW,gBAAiB","file":"component---src-reference-target-mdx-dec386db0c08b67dff99.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ubt/ubt/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { ContentLayout } from \"../layout/ContentLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ContentLayout title='Target' description='<b>target</b> is a block of xml actions wrapped together under one target. You can consider the target as a set of instructions to happen while running UBT.\nA project node will start with a target and will continue running until the last element of target is getting executed. A target can have <b>depends</b> attribute to resolve all the dependent target before executing current one.' syntax='<target name=\"main\" depends=\"dep1, dep2, ...\">\n</target>' properties='[{\"key\":\"name\",\"description\":\"Name of the target, this name will be used by the project tag and depends attribute to identify the target\",\"possibleValues\":\"any valid name\",\"default\":\"No DEFAULTS\",\"required\":\"YES\"},{\"key\":\"depends\",\"description\":\"List of dependent target names seperated by comma. \",\"possibleValues\":\"valid target names seperated by comma\",\"default\":\"Cannot be empty\",\"required\":\"NO\"}]' examples='[{\"description\":\"Simple Hello\",\"content\":\"<target name=\\\"main\\\"><echo>Hello, World</echo></target>\",\"note\":\"\"},{\"description\":\"Dependent Targets\",\"content\":\"<project default=\\\"dev\\\"><target name=\\\"dev\\\" depends=\\\"concepts, background\\\"><echo>Coming to the dev target</echo></target><target name=\\\"concepts\\\" depends=\\\"concept101\\\"><echo>Exploring the concepts</echo></target><target name=\\\"concept101\\\"><echo>Exploring the concept 101</echo></target><target name=\\\"background\\\"><echo>Exploring the background</echo></target></project>\",\"note\":\"\"}]' requires='[{\"text\":\"project\",\"route\":\"project\"}]' related='[{\"text\":\"depends\",\"route\":\"depends\"},{\"text\":\"project\",\"route\":\"project\"}]' mdxType=\"ContentLayout\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}