(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{l3jn:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return i})),r.d(t,"default",(function(){return c}));r("5hJT"),r("W1QL"),r("K/PF"),r("t91x"),r("75LO"),r("PJhk"),r("mXGw");var a=r("SAVP"),n=r("TjRS");r("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/tutorials/File IO.mdx"}});var l={_frontmatter:i},p=n.a;function c(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,["components"]);return Object(a.b)(p,o({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"creating-a-filefolder"},"Creating a file/folder"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-xml"}),'<project default="run" basedir="C:\\somfolder\\">\n    <target name="run">\n        <property name="authorname" value="YourName"/>\n        <property name="license_text" type="file" value="license.txt" />\n        <echo>Creating a new File</echo>\n        <perform operation="create" path="${authorname}" />\n        <perform operation="create" type="file" path="message.txt">\n            This content will be inside the created file, we can use ${authorName} property also. \n        </perform>\n        <perform operation="create" type="file" path="${authorname}/${authorfile}.txt">\n            Written by the ${authorname}.\n            ${license_text}\n        </perform>\n    </target>\n</project>\n')),Object(a.b)("h4",{id:"notes"},"Notes"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"perfrom")," tag without ",Object(a.b)("strong",{parentName:"li"},"type")," attribute will be considered as creating a directory."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"perform")," tag of ",Object(a.b)("strong",{parentName:"li"},"type")," file will use the childeren text to write inside a file. ",Object(a.b)("strong",{parentName:"li"},"property")," name can be used inside the text nodes.")),Object(a.b)("h3",{id:"deletecopymove-on-a-filefolder"},"Delete/Copy/Move on a file/folder"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-xml"}),'<project default="run" basedir="C:\\somfolder\\">\n    <target name="run">\n        <property name="authorname" value="YourName"/>\n        <echo>Deletes a directory</echo>\n        <perform type="delete" path="${authorname}" />\n        <echo>Deletes every file inside the folder dist, excepts anything has an extension .ini</echo>\n        <perform operation="delete" type="fileset" path="dist">\n            <fileset type="excludes" path="**/texts/*.ini" />\n        </perform>\n        <echo>Move a directory on from and paste it inside to</echo>\n        <perform operation="move" from="src/${authorname}" to="dir2" />\n        <echo>Copy a directory on from and paste it inside to</echo>\n        <perform operation="copy" from="dir1" to="${authorname}/bin/" />\n        <echo>Copy a file between from and to</echo>\n        <perform operation="copy" type="file" from="sample2/${authorname}/${authorfile}.txt" to="sample1/${authorfile}.txt" />\n    </target>\n</project>\n')),Object(a.b)("h4",{id:"notes-1"},"Notes"),Object(a.b)("p",null,"For more reference please read the section on the Related section."),Object(a.b)("h3",{id:"related"},"Related"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/project"}),"project")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/target"}),"target")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/perform"}),"perform")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/property"}),"property")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/fileset"}),"fileset")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://mahadeer.github.io/ubt/echo"}),"echo"))))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/tutorials/File IO.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-tutorials-file-io-mdx-60739c9b9231dcb32615.js.map